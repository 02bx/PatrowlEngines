sudo: required
language: python
services:
- docker
python:
- '2.7'
# - '3.6'
env:
- PATROWL_ENGINE="arachni" ENGINE_PORT=5005
- PATROWL_ENGINE="cortex" ENGINE_PORT=5009
- PATROWL_ENGINE="nessus" ENGINE_PORT=5002
- PATROWL_ENGINE="nmap" ENGINE_PORT=5001
- PATROWL_ENGINE="owl_code" ENGINE_PORT=5013
- PATROWL_ENGINE="owl_leaks" ENGINE_PORT=5012
- PATROWL_ENGINE="owl_dns" ENGINE_PORT=5006
- PATROWL_ENGINE="ssllabs" ENGINE_PORT=5004
- PATROWL_ENGINE="urlvoid" ENGINE_PORT=5008
- PATROWL_ENGINE="virustotal" ENGINE_PORT=5007
before_install:
- cd engines
- openssl aes-256-cbc -K $encrypted_18b0e45d2454_key -iv $encrypted_18b0e45d2454_iv -in travis-config.tar.enc -out travis-config.tar -d
- tar xf travis-config.tar
- cp virustotal/virustotal.json virustotal/virustotal.json.sample
- cp urlvoid/urlvoid.json urlvoid/urlvoid.json.sample
- cd $PATROWL_ENGINE
install:
- pip install -r requirements.txt
- pip install requests
# script:
# - gunicorn engine-$PATROWL_ENGINE:app -b 0.0.0.0:1$ENGINE_PORT > /dev/null &
# - docker --version
# - docker build --tag docker_$PATROWL_ENGINE .
# - if $PATROWL_ENGINE = cortex
# - docker run -d --rm -p $ENGINE_PORT:$ENGINE_PORT docker_$PATROWL_ENGINE
# - docker ps -a
# - pytest -s ./tests/*

jobs:
  include:
    - stage: set up engine
      script: gunicorn engine-$PATROWL_ENGINE:app -b 0.0.0.0:1$ENGINE_PORT > /dev/null &
    - stage: build docker image and start tests
      script:
        - docker --version
        - docker build --tag docker_$PATROWL_ENGINE .
        # - if env(PATROWL_ENGINE) = cortex; then docker-compose -f tests/cortex_docker_compose.yml up; fi
        - docker run -d --rm -p $ENGINE_PORT:$ENGINE_PORT docker_$PATROWL_ENGINE
        - docker ps -a
        - pytest -s ./tests/*
after_script:
- docker images
